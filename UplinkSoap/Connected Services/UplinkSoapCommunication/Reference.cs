//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UplinkSoap.UplinkSoapCommunication {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="https://www.numerexsolutions.com/webservices", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DialLog", Namespace="https://www.numerexsolutions.com/webservices")]
    [System.SerializableAttribute()]
    public partial class DialLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long dfDialLogIDField;
        
        private long dfLogIDField;
        
        private System.DateTime dtDialStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sNotifyTypeField;
        
        private int tiTxRetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sPriCSPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sCSAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sCSEventCodeField;
        
        private int iRetryNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sErrorDetailField;
        
        private System.DateTime dtDialEndField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long dfDialLogID {
            get {
                return this.dfDialLogIDField;
            }
            set {
                if ((this.dfDialLogIDField.Equals(value) != true)) {
                    this.dfDialLogIDField = value;
                    this.RaisePropertyChanged("dfDialLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long dfLogID {
            get {
                return this.dfLogIDField;
            }
            set {
                if ((this.dfLogIDField.Equals(value) != true)) {
                    this.dfLogIDField = value;
                    this.RaisePropertyChanged("dfLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime dtDialStart {
            get {
                return this.dtDialStartField;
            }
            set {
                if ((this.dtDialStartField.Equals(value) != true)) {
                    this.dtDialStartField = value;
                    this.RaisePropertyChanged("dtDialStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sNotifyType {
            get {
                return this.sNotifyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.sNotifyTypeField, value) != true)) {
                    this.sNotifyTypeField = value;
                    this.RaisePropertyChanged("sNotifyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int tiTxRetry {
            get {
                return this.tiTxRetryField;
            }
            set {
                if ((this.tiTxRetryField.Equals(value) != true)) {
                    this.tiTxRetryField = value;
                    this.RaisePropertyChanged("tiTxRetry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string sPriCSPhoneNo {
            get {
                return this.sPriCSPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sPriCSPhoneNoField, value) != true)) {
                    this.sPriCSPhoneNoField = value;
                    this.RaisePropertyChanged("sPriCSPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string sCSAccountNo {
            get {
                return this.sCSAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.sCSAccountNoField, value) != true)) {
                    this.sCSAccountNoField = value;
                    this.RaisePropertyChanged("sCSAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string sCSEventCode {
            get {
                return this.sCSEventCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.sCSEventCodeField, value) != true)) {
                    this.sCSEventCodeField = value;
                    this.RaisePropertyChanged("sCSEventCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int iRetryNo {
            get {
                return this.iRetryNoField;
            }
            set {
                if ((this.iRetryNoField.Equals(value) != true)) {
                    this.iRetryNoField = value;
                    this.RaisePropertyChanged("iRetryNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string sResult {
            get {
                return this.sResultField;
            }
            set {
                if ((object.ReferenceEquals(this.sResultField, value) != true)) {
                    this.sResultField = value;
                    this.RaisePropertyChanged("sResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string sErrorDetail {
            get {
                return this.sErrorDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.sErrorDetailField, value) != true)) {
                    this.sErrorDetailField = value;
                    this.RaisePropertyChanged("sErrorDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.DateTime dtDialEnd {
            get {
                return this.dtDialEndField;
            }
            set {
                if ((this.dtDialEndField.Equals(value) != true)) {
                    this.dtDialEndField = value;
                    this.RaisePropertyChanged("dtDialEnd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://www.numerexsolutions.com/webservices", ConfigurationName="UplinkSoapCommunication.M2MServiceSoap")]
    public interface M2MServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ValidateSystemUser", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse ValidateSystemUser(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ValidateSystemUser", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse> ValidateSystemUserAsync(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ProvisionUnit", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse ProvisionUnit(UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ProvisionUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse> ProvisionUnitAsync(UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/CreateAccount", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.CreateAccountResponse CreateAccount(UplinkSoap.UplinkSoapCommunication.CreateAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.CreateAccountResponse> CreateAccountAsync(UplinkSoap.UplinkSoapCommunication.CreateAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnAccountInfoById", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse ReturnAccountInfoById(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnAccountInfoById", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse> ReturnAccountInfoByIdAsync(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnAccountInfo", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse ReturnAccountInfo(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnAccountInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse> ReturnAccountInfoAsync(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ActivateUnit", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse ActivateUnit(UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ActivateUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse> ActivateUnitAsync(UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReActivateUnit", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse ReActivateUnit(UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReActivateUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse> ReActivateUnitAsync(UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/DeactivateUnit", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse DeactivateUnit(UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/DeactivateUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse> DeactivateUnitAsync(UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ChangeServicePlanForBilling", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse ChangeServicePlanForBilling(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ChangeServicePlanForBilling", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse> ChangeServicePlanForBillingAsync(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/IsUserNameUnique", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse IsUserNameUnique(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/IsUserNameUnique", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse> IsUserNameUniqueAsync(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnUserInfo", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse ReturnUserInfo(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse> ReturnUserInfoAsync(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/AddUnitToM2MDice", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse AddUnitToM2MDice(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/AddUnitToM2MDice", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse> AddUnitToM2MDiceAsync(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/NotifyDialersViaM2M", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse NotifyDialersViaM2M(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/NotifyDialersViaM2M", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse> NotifyDialersViaM2MAsync(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnDialResult", ReplyAction="*")]
        UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse ReturnDialResult(UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.numerexsolutions.com/webservices/ReturnDialResult", ReplyAction="*")]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse> ReturnDialResultAsync(UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateSystemUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateSystemUser", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequestBody Body;
        
        public ValidateSystemUserRequest() {
        }
        
        public ValidateSystemUserRequest(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ValidateSystemUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ErrorText;
        
        public ValidateSystemUserRequestBody() {
        }
        
        public ValidateSystemUserRequestBody(string UserName, string Password, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateSystemUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateSystemUserResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponseBody Body;
        
        public ValidateSystemUserResponse() {
        }
        
        public ValidateSystemUserResponse(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ValidateSystemUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ValidateSystemUserResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ValidateSystemUserResponseBody() {
        }
        
        public ValidateSystemUserResponseBody(int ValidateSystemUserResult, string ErrorText) {
            this.ValidateSystemUserResult = ValidateSystemUserResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ProvisionUnitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ProvisionUnit", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequestBody Body;
        
        public ProvisionUnitRequest() {
        }
        
        public ProvisionUnitRequest(UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ProvisionUnitRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string IMSI;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SIMSerialNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string UnitType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string FirmwareVersion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string BoardSerialNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string IMEI;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime Provisioned;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ProvisionOperator;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ErrorText;
        
        public ProvisionUnitRequestBody() {
        }
        
        public ProvisionUnitRequestBody(string UserName, string Password, string IMSI, string SIMSerialNo, string UnitType, string FirmwareVersion, string BoardSerialNo, string IMEI, System.DateTime Provisioned, string ProvisionOperator, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.IMSI = IMSI;
            this.SIMSerialNo = SIMSerialNo;
            this.UnitType = UnitType;
            this.FirmwareVersion = FirmwareVersion;
            this.BoardSerialNo = BoardSerialNo;
            this.IMEI = IMEI;
            this.Provisioned = Provisioned;
            this.ProvisionOperator = ProvisionOperator;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ProvisionUnitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ProvisionUnitResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponseBody Body;
        
        public ProvisionUnitResponse() {
        }
        
        public ProvisionUnitResponse(UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ProvisionUnitResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ProvisionUnitResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ProvisionUnitResponseBody() {
        }
        
        public ProvisionUnitResponseBody(int ProvisionUnitResult, string ErrorText) {
            this.ProvisionUnitResult = ProvisionUnitResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateAccount", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.CreateAccountRequestBody Body;
        
        public CreateAccountRequest() {
        }
        
        public CreateAccountRequest(UplinkSoap.UplinkSoapCommunication.CreateAccountRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class CreateAccountRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string DealerUserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string DealerPassword;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Address1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Address2;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string City;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string State;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ZipCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Province;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Country;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string PriBusContact;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string BusContactPhone;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string BusContactEmail;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string InvoiceEmail;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string ErrorText;
        
        public CreateAccountRequestBody() {
        }
        
        public CreateAccountRequestBody(
                    string UserName, 
                    string Password, 
                    string Name, 
                    string DealerUserName, 
                    string DealerPassword, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Province, 
                    string Country, 
                    string PriBusContact, 
                    string BusContactPhone, 
                    string BusContactEmail, 
                    string InvoiceEmail, 
                    string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.Name = Name;
            this.DealerUserName = DealerUserName;
            this.DealerPassword = DealerPassword;
            this.Address1 = Address1;
            this.Address2 = Address2;
            this.City = City;
            this.State = State;
            this.ZipCode = ZipCode;
            this.Province = Province;
            this.Country = Country;
            this.PriBusContact = PriBusContact;
            this.BusContactPhone = BusContactPhone;
            this.BusContactEmail = BusContactEmail;
            this.InvoiceEmail = InvoiceEmail;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateAccountResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.CreateAccountResponseBody Body;
        
        public CreateAccountResponse() {
        }
        
        public CreateAccountResponse(UplinkSoap.UplinkSoapCommunication.CreateAccountResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class CreateAccountResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int CreateAccountResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public CreateAccountResponseBody() {
        }
        
        public CreateAccountResponseBody(int CreateAccountResult, string ErrorText) {
            this.CreateAccountResult = CreateAccountResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnAccountInfoByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnAccountInfoById", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequestBody Body;
        
        public ReturnAccountInfoByIdRequest() {
        }
        
        public ReturnAccountInfoByIdRequest(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnAccountInfoByIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iAccountId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ErrorText;
        
        public ReturnAccountInfoByIdRequestBody() {
        }
        
        public ReturnAccountInfoByIdRequestBody(string UserName, string Password, int iAccountId, int ErrorCode, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.iAccountId = iAccountId;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnAccountInfoByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnAccountInfoByIdResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponseBody Body;
        
        public ReturnAccountInfoByIdResponse() {
        }
        
        public ReturnAccountInfoByIdResponse(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnAccountInfoByIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfoByIdResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ErrorText;
        
        public ReturnAccountInfoByIdResponseBody() {
        }
        
        public ReturnAccountInfoByIdResponseBody(UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfoByIdResult, int ErrorCode, string ErrorText) {
            this.ReturnAccountInfoByIdResult = ReturnAccountInfoByIdResult;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnAccountInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnAccountInfo", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequestBody Body;
        
        public ReturnAccountInfoRequest() {
        }
        
        public ReturnAccountInfoRequest(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnAccountInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string AccountUserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string AccountPassword;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ErrorText;
        
        public ReturnAccountInfoRequestBody() {
        }
        
        public ReturnAccountInfoRequestBody(string UserName, string Password, string AccountUserName, string AccountPassword, int ErrorCode, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.AccountUserName = AccountUserName;
            this.AccountPassword = AccountPassword;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnAccountInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnAccountInfoResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponseBody Body;
        
        public ReturnAccountInfoResponse() {
        }
        
        public ReturnAccountInfoResponse(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnAccountInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfoResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ErrorText;
        
        public ReturnAccountInfoResponseBody() {
        }
        
        public ReturnAccountInfoResponseBody(UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfoResult, int ErrorCode, string ErrorText) {
            this.ReturnAccountInfoResult = ReturnAccountInfoResult;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateUnitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateUnit", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ActivateUnitRequestBody Body;
        
        public ActivateUnitRequest() {
        }
        
        public ActivateUnitRequest(UplinkSoap.UplinkSoapCommunication.ActivateUnitRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ActivateUnitRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iAccountId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IMEI;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool BillByUplink;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ErrorText;
        
        public ActivateUnitRequestBody() {
        }
        
        public ActivateUnitRequestBody(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.iAccountId = iAccountId;
            this.IMEI = IMEI;
            this.BillByUplink = BillByUplink;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateUnitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateUnitResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ActivateUnitResponseBody Body;
        
        public ActivateUnitResponse() {
        }
        
        public ActivateUnitResponse(UplinkSoap.UplinkSoapCommunication.ActivateUnitResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ActivateUnitResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ActivateUnitResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ActivateUnitResponseBody() {
        }
        
        public ActivateUnitResponseBody(int ActivateUnitResult, string ErrorText) {
            this.ActivateUnitResult = ActivateUnitResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReActivateUnitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReActivateUnit", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequestBody Body;
        
        public ReActivateUnitRequest() {
        }
        
        public ReActivateUnitRequest(UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReActivateUnitRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iAccountId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IMEI;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool BillByUplink;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ErrorText;
        
        public ReActivateUnitRequestBody() {
        }
        
        public ReActivateUnitRequestBody(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.iAccountId = iAccountId;
            this.IMEI = IMEI;
            this.BillByUplink = BillByUplink;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReActivateUnitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReActivateUnitResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponseBody Body;
        
        public ReActivateUnitResponse() {
        }
        
        public ReActivateUnitResponse(UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReActivateUnitResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ReActivateUnitResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ReActivateUnitResponseBody() {
        }
        
        public ReActivateUnitResponseBody(int ReActivateUnitResult, string ErrorText) {
            this.ReActivateUnitResult = ReActivateUnitResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeactivateUnitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeactivateUnit", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequestBody Body;
        
        public DeactivateUnitRequest() {
        }
        
        public DeactivateUnitRequest(UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class DeactivateUnitRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iAccountId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IMEI;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ErrorText;
        
        public DeactivateUnitRequestBody() {
        }
        
        public DeactivateUnitRequestBody(string UserName, string Password, int iAccountId, string IMEI, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.iAccountId = iAccountId;
            this.IMEI = IMEI;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeactivateUnitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeactivateUnitResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponseBody Body;
        
        public DeactivateUnitResponse() {
        }
        
        public DeactivateUnitResponse(UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class DeactivateUnitResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int DeactivateUnitResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public DeactivateUnitResponseBody() {
        }
        
        public DeactivateUnitResponseBody(int DeactivateUnitResult, string ErrorText) {
            this.DeactivateUnitResult = DeactivateUnitResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeServicePlanForBillingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeServicePlanForBilling", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequestBody Body;
        
        public ChangeServicePlanForBillingRequest() {
        }
        
        public ChangeServicePlanForBillingRequest(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ChangeServicePlanForBillingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int iAccountId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IMEI;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool BillByUplink;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool IsFirstTimeActivation;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string ErrorText;
        
        public ChangeServicePlanForBillingRequestBody() {
        }
        
        public ChangeServicePlanForBillingRequestBody(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, bool IsFirstTimeActivation, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.iAccountId = iAccountId;
            this.IMEI = IMEI;
            this.BillByUplink = BillByUplink;
            this.IsFirstTimeActivation = IsFirstTimeActivation;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeServicePlanForBillingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeServicePlanForBillingResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponseBody Body;
        
        public ChangeServicePlanForBillingResponse() {
        }
        
        public ChangeServicePlanForBillingResponse(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ChangeServicePlanForBillingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int ChangeServicePlanForBillingResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ChangeServicePlanForBillingResponseBody() {
        }
        
        public ChangeServicePlanForBillingResponseBody(int ChangeServicePlanForBillingResult, string ErrorText) {
            this.ChangeServicePlanForBillingResult = ChangeServicePlanForBillingResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsUserNameUniqueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUserNameUnique", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequestBody Body;
        
        public IsUserNameUniqueRequest() {
        }
        
        public IsUserNameUniqueRequest(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class IsUserNameUniqueRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string DealerUserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ErrorText;
        
        public IsUserNameUniqueRequestBody() {
        }
        
        public IsUserNameUniqueRequestBody(string UserName, string Password, string DealerUserName, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.DealerUserName = DealerUserName;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsUserNameUniqueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUserNameUniqueResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponseBody Body;
        
        public IsUserNameUniqueResponse() {
        }
        
        public IsUserNameUniqueResponse(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class IsUserNameUniqueResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int IsUserNameUniqueResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public IsUserNameUniqueResponseBody() {
        }
        
        public IsUserNameUniqueResponseBody(int IsUserNameUniqueResult, string ErrorText) {
            this.IsUserNameUniqueResult = IsUserNameUniqueResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnUserInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnUserInfo", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequestBody Body;
        
        public ReturnUserInfoRequest() {
        }
        
        public ReturnUserInfoRequest(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnUserInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string DealerUserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string DealerPassword;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ErrorText;
        
        public ReturnUserInfoRequestBody() {
        }
        
        public ReturnUserInfoRequestBody(string UserName, string Password, string DealerUserName, string DealerPassword, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.DealerUserName = DealerUserName;
            this.DealerPassword = DealerPassword;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnUserInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnUserInfoResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponseBody Body;
        
        public ReturnUserInfoResponse() {
        }
        
        public ReturnUserInfoResponse(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnUserInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnUserInfoResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public ReturnUserInfoResponseBody() {
        }
        
        public ReturnUserInfoResponseBody(UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnUserInfoResult, string ErrorText) {
            this.ReturnUserInfoResult = ReturnUserInfoResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddUnitToM2MDiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddUnitToM2MDice", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequestBody Body;
        
        public AddUnitToM2MDiceRequest() {
        }
        
        public AddUnitToM2MDiceRequest(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class AddUnitToM2MDiceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString listString;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ErrorText;
        
        public AddUnitToM2MDiceRequestBody() {
        }
        
        public AddUnitToM2MDiceRequestBody(string UserName, string Password, UplinkSoap.UplinkSoapCommunication.ArrayOfString listString, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.listString = listString;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddUnitToM2MDiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddUnitToM2MDiceResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponseBody Body;
        
        public AddUnitToM2MDiceResponse() {
        }
        
        public AddUnitToM2MDiceResponse(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class AddUnitToM2MDiceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int AddUnitToM2MDiceResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorText;
        
        public AddUnitToM2MDiceResponseBody() {
        }
        
        public AddUnitToM2MDiceResponseBody(int AddUnitToM2MDiceResult, string ErrorText) {
            this.AddUnitToM2MDiceResult = AddUnitToM2MDiceResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotifyDialersViaM2MRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NotifyDialersViaM2M", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequestBody Body;
        
        public NotifyDialersViaM2MRequest() {
        }
        
        public NotifyDialersViaM2MRequest(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class NotifyDialersViaM2MRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int dfLogID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string MSISDN;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int NotificationType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string CSPhoneNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string CSAccountNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string CSEventCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int TxRetry;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ErrorText;
        
        public NotifyDialersViaM2MRequestBody() {
        }
        
        public NotifyDialersViaM2MRequestBody(string UserName, string Password, int dfLogID, string MSISDN, int NotificationType, string CSPhoneNo, string CSAccountNo, string CSEventCode, int TxRetry, int ErrorCode, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.dfLogID = dfLogID;
            this.MSISDN = MSISDN;
            this.NotificationType = NotificationType;
            this.CSPhoneNo = CSPhoneNo;
            this.CSAccountNo = CSAccountNo;
            this.CSEventCode = CSEventCode;
            this.TxRetry = TxRetry;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NotifyDialersViaM2MResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NotifyDialersViaM2MResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponseBody Body;
        
        public NotifyDialersViaM2MResponse() {
        }
        
        public NotifyDialersViaM2MResponse(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class NotifyDialersViaM2MResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long NotifyDialersViaM2MResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ErrorText;
        
        public NotifyDialersViaM2MResponseBody() {
        }
        
        public NotifyDialersViaM2MResponseBody(long NotifyDialersViaM2MResult, int ErrorCode, string ErrorText) {
            this.NotifyDialersViaM2MResult = NotifyDialersViaM2MResult;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnDialResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnDialResult", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequestBody Body;
        
        public ReturnDialResultRequest() {
        }
        
        public ReturnDialResultRequest(UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnDialResultRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Password;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long DialLogID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ErrorText;
        
        public ReturnDialResultRequestBody() {
        }
        
        public ReturnDialResultRequestBody(string UserName, string Password, long DialLogID, int ErrorCode, string ErrorText) {
            this.UserName = UserName;
            this.Password = Password;
            this.DialLogID = DialLogID;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReturnDialResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReturnDialResultResponse", Namespace="https://www.numerexsolutions.com/webservices", Order=0)]
        public UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponseBody Body;
        
        public ReturnDialResultResponse() {
        }
        
        public ReturnDialResultResponse(UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://www.numerexsolutions.com/webservices")]
    public partial class ReturnDialResultResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public UplinkSoap.UplinkSoapCommunication.DialLog[] ReturnDialResultResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ErrorCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ErrorText;
        
        public ReturnDialResultResponseBody() {
        }
        
        public ReturnDialResultResponseBody(UplinkSoap.UplinkSoapCommunication.DialLog[] ReturnDialResultResult, int ErrorCode, string ErrorText) {
            this.ReturnDialResultResult = ReturnDialResultResult;
            this.ErrorCode = ErrorCode;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface M2MServiceSoapChannel : UplinkSoap.UplinkSoapCommunication.M2MServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class M2MServiceSoapClient : System.ServiceModel.ClientBase<UplinkSoap.UplinkSoapCommunication.M2MServiceSoap>, UplinkSoap.UplinkSoapCommunication.M2MServiceSoap {
        
        public M2MServiceSoapClient() {
        }
        
        public M2MServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public M2MServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public M2MServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public M2MServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ValidateSystemUser(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest request) {
            return base.Channel.ValidateSystemUser(request);
        }
        
        public int ValidateSystemUser(string UserName, string Password, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest inValue = new UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ValidateSystemUser(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ValidateSystemUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ValidateSystemUserAsync(UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest request) {
            return base.Channel.ValidateSystemUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ValidateSystemUserResponse> ValidateSystemUserAsync(string UserName, string Password, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest inValue = new UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ValidateSystemUserRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ValidateSystemUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ProvisionUnit(UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest request) {
            return base.Channel.ProvisionUnit(request);
        }
        
        public int ProvisionUnit(string UserName, string Password, string IMSI, string SIMSerialNo, string UnitType, string FirmwareVersion, string BoardSerialNo, string IMEI, System.DateTime Provisioned, string ProvisionOperator, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.IMSI = IMSI;
            inValue.Body.SIMSerialNo = SIMSerialNo;
            inValue.Body.UnitType = UnitType;
            inValue.Body.FirmwareVersion = FirmwareVersion;
            inValue.Body.BoardSerialNo = BoardSerialNo;
            inValue.Body.IMEI = IMEI;
            inValue.Body.Provisioned = Provisioned;
            inValue.Body.ProvisionOperator = ProvisionOperator;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ProvisionUnit(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ProvisionUnitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ProvisionUnitAsync(UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest request) {
            return base.Channel.ProvisionUnitAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ProvisionUnitResponse> ProvisionUnitAsync(string UserName, string Password, string IMSI, string SIMSerialNo, string UnitType, string FirmwareVersion, string BoardSerialNo, string IMEI, System.DateTime Provisioned, string ProvisionOperator, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ProvisionUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.IMSI = IMSI;
            inValue.Body.SIMSerialNo = SIMSerialNo;
            inValue.Body.UnitType = UnitType;
            inValue.Body.FirmwareVersion = FirmwareVersion;
            inValue.Body.BoardSerialNo = BoardSerialNo;
            inValue.Body.IMEI = IMEI;
            inValue.Body.Provisioned = Provisioned;
            inValue.Body.ProvisionOperator = ProvisionOperator;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ProvisionUnitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.CreateAccountResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.CreateAccount(UplinkSoap.UplinkSoapCommunication.CreateAccountRequest request) {
            return base.Channel.CreateAccount(request);
        }
        
        public int CreateAccount(
                    string UserName, 
                    string Password, 
                    string Name, 
                    string DealerUserName, 
                    string DealerPassword, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Province, 
                    string Country, 
                    string PriBusContact, 
                    string BusContactPhone, 
                    string BusContactEmail, 
                    string InvoiceEmail, 
                    ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.CreateAccountRequest inValue = new UplinkSoap.UplinkSoapCommunication.CreateAccountRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.CreateAccountRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.Name = Name;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.DealerPassword = DealerPassword;
            inValue.Body.Address1 = Address1;
            inValue.Body.Address2 = Address2;
            inValue.Body.City = City;
            inValue.Body.State = State;
            inValue.Body.ZipCode = ZipCode;
            inValue.Body.Province = Province;
            inValue.Body.Country = Country;
            inValue.Body.PriBusContact = PriBusContact;
            inValue.Body.BusContactPhone = BusContactPhone;
            inValue.Body.BusContactEmail = BusContactEmail;
            inValue.Body.InvoiceEmail = InvoiceEmail;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.CreateAccountResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).CreateAccount(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.CreateAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.CreateAccountResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.CreateAccountAsync(UplinkSoap.UplinkSoapCommunication.CreateAccountRequest request) {
            return base.Channel.CreateAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.CreateAccountResponse> CreateAccountAsync(
                    string UserName, 
                    string Password, 
                    string Name, 
                    string DealerUserName, 
                    string DealerPassword, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string Province, 
                    string Country, 
                    string PriBusContact, 
                    string BusContactPhone, 
                    string BusContactEmail, 
                    string InvoiceEmail, 
                    string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.CreateAccountRequest inValue = new UplinkSoap.UplinkSoapCommunication.CreateAccountRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.CreateAccountRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.Name = Name;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.DealerPassword = DealerPassword;
            inValue.Body.Address1 = Address1;
            inValue.Body.Address2 = Address2;
            inValue.Body.City = City;
            inValue.Body.State = State;
            inValue.Body.ZipCode = ZipCode;
            inValue.Body.Province = Province;
            inValue.Body.Country = Country;
            inValue.Body.PriBusContact = PriBusContact;
            inValue.Body.BusContactPhone = BusContactPhone;
            inValue.Body.BusContactEmail = BusContactEmail;
            inValue.Body.InvoiceEmail = InvoiceEmail;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).CreateAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnAccountInfoById(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest request) {
            return base.Channel.ReturnAccountInfoById(request);
        }
        
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfoById(string UserName, string Password, int iAccountId, ref int ErrorCode, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnAccountInfoById(inValue);
            ErrorCode = retVal.Body.ErrorCode;
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ReturnAccountInfoByIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnAccountInfoByIdAsync(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest request) {
            return base.Channel.ReturnAccountInfoByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdResponse> ReturnAccountInfoByIdAsync(string UserName, string Password, int iAccountId, int ErrorCode, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoByIdRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnAccountInfoByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnAccountInfo(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest request) {
            return base.Channel.ReturnAccountInfo(request);
        }
        
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnAccountInfo(string UserName, string Password, string AccountUserName, string AccountPassword, ref int ErrorCode, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.AccountUserName = AccountUserName;
            inValue.Body.AccountPassword = AccountPassword;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnAccountInfo(inValue);
            ErrorCode = retVal.Body.ErrorCode;
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ReturnAccountInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnAccountInfoAsync(UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest request) {
            return base.Channel.ReturnAccountInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoResponse> ReturnAccountInfoAsync(string UserName, string Password, string AccountUserName, string AccountPassword, int ErrorCode, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnAccountInfoRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.AccountUserName = AccountUserName;
            inValue.Body.AccountPassword = AccountPassword;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnAccountInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ActivateUnit(UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest request) {
            return base.Channel.ActivateUnit(request);
        }
        
        public int ActivateUnit(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ActivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ActivateUnit(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ActivateUnitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ActivateUnitAsync(UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest request) {
            return base.Channel.ActivateUnitAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ActivateUnitResponse> ActivateUnitAsync(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ActivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ActivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ActivateUnitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReActivateUnit(UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest request) {
            return base.Channel.ReActivateUnit(request);
        }
        
        public int ReActivateUnit(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReActivateUnit(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ReActivateUnitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReActivateUnitAsync(UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest request) {
            return base.Channel.ReActivateUnitAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReActivateUnitResponse> ReActivateUnitAsync(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReActivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReActivateUnitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.DeactivateUnit(UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest request) {
            return base.Channel.DeactivateUnit(request);
        }
        
        public int DeactivateUnit(string UserName, string Password, int iAccountId, string IMEI, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).DeactivateUnit(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.DeactivateUnitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.DeactivateUnitAsync(UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest request) {
            return base.Channel.DeactivateUnitAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.DeactivateUnitResponse> DeactivateUnitAsync(string UserName, string Password, int iAccountId, string IMEI, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest inValue = new UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.DeactivateUnitRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).DeactivateUnitAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ChangeServicePlanForBilling(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest request) {
            return base.Channel.ChangeServicePlanForBilling(request);
        }
        
        public int ChangeServicePlanForBilling(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, bool IsFirstTimeActivation, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest inValue = new UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.IsFirstTimeActivation = IsFirstTimeActivation;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ChangeServicePlanForBilling(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ChangeServicePlanForBillingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ChangeServicePlanForBillingAsync(UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest request) {
            return base.Channel.ChangeServicePlanForBillingAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingResponse> ChangeServicePlanForBillingAsync(string UserName, string Password, int iAccountId, string IMEI, bool BillByUplink, bool IsFirstTimeActivation, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest inValue = new UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ChangeServicePlanForBillingRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.iAccountId = iAccountId;
            inValue.Body.IMEI = IMEI;
            inValue.Body.BillByUplink = BillByUplink;
            inValue.Body.IsFirstTimeActivation = IsFirstTimeActivation;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ChangeServicePlanForBillingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.IsUserNameUnique(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest request) {
            return base.Channel.IsUserNameUnique(request);
        }
        
        public int IsUserNameUnique(string UserName, string Password, string DealerUserName, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest inValue = new UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).IsUserNameUnique(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.IsUserNameUniqueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.IsUserNameUniqueAsync(UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest request) {
            return base.Channel.IsUserNameUniqueAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueResponse> IsUserNameUniqueAsync(string UserName, string Password, string DealerUserName, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest inValue = new UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.IsUserNameUniqueRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).IsUserNameUniqueAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnUserInfo(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest request) {
            return base.Channel.ReturnUserInfo(request);
        }
        
        public UplinkSoap.UplinkSoapCommunication.ArrayOfString ReturnUserInfo(string UserName, string Password, string DealerUserName, string DealerPassword, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.DealerPassword = DealerPassword;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnUserInfo(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ReturnUserInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnUserInfoAsync(UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest request) {
            return base.Channel.ReturnUserInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnUserInfoResponse> ReturnUserInfoAsync(string UserName, string Password, string DealerUserName, string DealerPassword, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnUserInfoRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DealerUserName = DealerUserName;
            inValue.Body.DealerPassword = DealerPassword;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnUserInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.AddUnitToM2MDice(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest request) {
            return base.Channel.AddUnitToM2MDice(request);
        }
        
        public int AddUnitToM2MDice(string UserName, string Password, UplinkSoap.UplinkSoapCommunication.ArrayOfString listString, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest inValue = new UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.listString = listString;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).AddUnitToM2MDice(inValue);
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.AddUnitToM2MDiceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.AddUnitToM2MDiceAsync(UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest request) {
            return base.Channel.AddUnitToM2MDiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceResponse> AddUnitToM2MDiceAsync(string UserName, string Password, UplinkSoap.UplinkSoapCommunication.ArrayOfString listString, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest inValue = new UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.AddUnitToM2MDiceRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.listString = listString;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).AddUnitToM2MDiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.NotifyDialersViaM2M(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest request) {
            return base.Channel.NotifyDialersViaM2M(request);
        }
        
        public long NotifyDialersViaM2M(string UserName, string Password, int dfLogID, string MSISDN, int NotificationType, string CSPhoneNo, string CSAccountNo, string CSEventCode, int TxRetry, ref int ErrorCode, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest inValue = new UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.dfLogID = dfLogID;
            inValue.Body.MSISDN = MSISDN;
            inValue.Body.NotificationType = NotificationType;
            inValue.Body.CSPhoneNo = CSPhoneNo;
            inValue.Body.CSAccountNo = CSAccountNo;
            inValue.Body.CSEventCode = CSEventCode;
            inValue.Body.TxRetry = TxRetry;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).NotifyDialersViaM2M(inValue);
            ErrorCode = retVal.Body.ErrorCode;
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.NotifyDialersViaM2MResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.NotifyDialersViaM2MAsync(UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest request) {
            return base.Channel.NotifyDialersViaM2MAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MResponse> NotifyDialersViaM2MAsync(string UserName, string Password, int dfLogID, string MSISDN, int NotificationType, string CSPhoneNo, string CSAccountNo, string CSEventCode, int TxRetry, int ErrorCode, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest inValue = new UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.NotifyDialersViaM2MRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.dfLogID = dfLogID;
            inValue.Body.MSISDN = MSISDN;
            inValue.Body.NotificationType = NotificationType;
            inValue.Body.CSPhoneNo = CSPhoneNo;
            inValue.Body.CSAccountNo = CSAccountNo;
            inValue.Body.CSEventCode = CSEventCode;
            inValue.Body.TxRetry = TxRetry;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).NotifyDialersViaM2MAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnDialResult(UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest request) {
            return base.Channel.ReturnDialResult(request);
        }
        
        public UplinkSoap.UplinkSoapCommunication.DialLog[] ReturnDialResult(string UserName, string Password, long DialLogID, ref int ErrorCode, ref string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DialLogID = DialLogID;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse retVal = ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnDialResult(inValue);
            ErrorCode = retVal.Body.ErrorCode;
            ErrorText = retVal.Body.ErrorText;
            return retVal.Body.ReturnDialResultResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse> UplinkSoap.UplinkSoapCommunication.M2MServiceSoap.ReturnDialResultAsync(UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest request) {
            return base.Channel.ReturnDialResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplinkSoap.UplinkSoapCommunication.ReturnDialResultResponse> ReturnDialResultAsync(string UserName, string Password, long DialLogID, int ErrorCode, string ErrorText) {
            UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest inValue = new UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequest();
            inValue.Body = new UplinkSoap.UplinkSoapCommunication.ReturnDialResultRequestBody();
            inValue.Body.UserName = UserName;
            inValue.Body.Password = Password;
            inValue.Body.DialLogID = DialLogID;
            inValue.Body.ErrorCode = ErrorCode;
            inValue.Body.ErrorText = ErrorText;
            return ((UplinkSoap.UplinkSoapCommunication.M2MServiceSoap)(this)).ReturnDialResultAsync(inValue);
        }
    }
}
